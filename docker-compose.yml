# docker-compose.yml

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      - API_PATH
      - API_KEY
      - DATABASE_URL=postgresql+psycopg://degrad:degrad@database:5432/degrad
      - MAX_WORKERS=1
    depends_on:
      - database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=(Host(`$HOST`) && PathPrefix(`$API_PATH`))"
      - "traefik.http.routers.fastapi.entrypoints=web,websecure"
      - "traefik.http.services.fastapi.loadbalancer.server.port=80"
      - "traefik.http.routers.fastapi.middlewares=fastapi-stripprefix"
      - "traefik.http.middlewares.fastapi-stripprefix.stripprefix.prefixes=$API_PATH"
    volumes:
      - "./api/alembic/versions:/code/alembic/versions"

  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=degrad
      - POSTGRES_PASSWORD=degrad
      - POSTGRES_DB=degrad

  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - database
    environment:
    # Configura proxy
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s${DASH_PATH}/
      - GF_SERVER_DOMAIN=$HOST
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=(Host(`$HOST`) && PathPrefix(`$DASH_PATH`))"
      - "traefik.http.routers.grafana.entrypoints=web,websecure"
      - traefik.http.middlewares.redirect-websecure.redirectscheme.scheme=https
      - traefik.http.routers.grafana.middlewares=redirect-websecure

  traefik:
    image: traefik:v2.10
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      # - "--api.dashboard=true"
      # Providers
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file=true"
      - "--providers.file.filename=/etc/traefik/rules.toml"
      # Entry points
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls.certresolver=letsencrypt"
      # SSL
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      # - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email=$EMAIL"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Global redirect to https
      # - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      # - $PORT:80
      - "80:80"
      - "443:443"
      # - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
      # File provider
      - "./rules.toml:/etc/traefik/rules.toml"
    extra_hosts:
      # Enable access to host using http://host.docker.internal
      - "host.docker.internal:host-gateway"

volumes:
  grafana-data: null
  postgres-data:
    external: true
